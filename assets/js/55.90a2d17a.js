(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{257:function(t,e,n){"use strict";n.r(e);var a=n(0),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"webpack5模块联邦源码探究"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#webpack5模块联邦源码探究"}},[t._v("#")]),t._v(" webpack5模块联邦源码探究")]),t._v(" "),n("h2",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),n("p",[t._v("虽然webpack5已经发布了一段时间了，但一直都没有研究过，最近正好在做微前端相关的调研，恰好看到了webpack5的模块联邦与微前端的相关方案，便想着探究下模块联邦的相关源码。（ps：关于微前端，稍微说一句，个人觉得在选取微前端方案的时候可有结合现有资源以及形态进行相关取舍，从共享能力、隔离机制、数据方案、路由鉴权等不同维度综合考量，个人使用最小的迁移成本，渐进式的过渡，才是最优的选择。）")]),t._v(" "),n("h2",{attrs:{id:"目录结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[t._v("#")]),t._v(" 目录结构")]),t._v(" "),n("p",[n("img",{attrs:{src:"/tech/front/federation20210119/federation01.png",alt:"图片"}})]),t._v(" "),n("ul",[n("li",[t._v("container\n"),n("ul",[n("li",[t._v("ModuleFederationPlugin.js (核心，重点分析)")]),t._v(" "),n("li",[t._v("options.js (用户输入的option)")]),t._v(" "),n("li",[t._v("ContainerEntryDependency.js")]),t._v(" "),n("li",[t._v("ContainerEntryModule.js")]),t._v(" "),n("li",[t._v("ContainerEntryModuleFactory.js")]),t._v(" "),n("li",[t._v("ContainerExposedDependency.js")]),t._v(" "),n("li",[t._v("ContainerPlugin.js (核心，重点分析)")]),t._v(" "),n("li",[t._v("ContainerReferencePlugin.js (核心，重点分析)")]),t._v(" "),n("li",[t._v("FallbackDependency.js")]),t._v(" "),n("li",[t._v("FallbackItemDependency.js")]),t._v(" "),n("li",[t._v("FallbackModule.js")]),t._v(" "),n("li",[t._v("FallbackModuleFactory.js")]),t._v(" "),n("li",[t._v("RemoteModule.js")]),t._v(" "),n("li",[t._v("RemoteRuntimeModule.js")]),t._v(" "),n("li",[t._v("RemoteToExternalDependency.js")])])]),t._v(" "),n("li",[t._v("sharing\n"),n("ul",[n("li",[t._v("SharePlugin.js (核心，重点分析)")]),t._v(" "),n("li",[t._v("ShareRuntimeModule.js")]),t._v(" "),n("li",[t._v("utils.js")]),t._v(" "),n("li",[t._v("resolveMatchedConfigs.js")]),t._v(" "),n("li",[t._v("ConsumeSharedFallbackDependency.js")]),t._v(" "),n("li",[t._v("ConsumeSharedModule.js")]),t._v(" "),n("li",[t._v("ConsumeSharedPlugin.js")]),t._v(" "),n("li",[t._v("ConsumeSharedRuntimeModule.js")]),t._v(" "),n("li",[t._v("ProvideForSharedDependency.js")]),t._v(" "),n("li",[t._v("ProvideSharedModule.js")]),t._v(" "),n("li",[t._v("ProvideSharedModuleFactory.js")]),t._v(" "),n("li",[t._v("ProvideSharedPlugin.js")])])]),t._v(" "),n("li",[t._v("Module.js (webpack的module)")]),t._v(" "),n("li",[t._v("ModuleGraph.js (module图的依赖)")])]),t._v(" "),n("h2",{attrs:{id:"源码解析"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#源码解析"}},[t._v("#")]),t._v(" 源码解析")]),t._v(" "),n("p",[t._v("整体webpack5的模块联邦 Module Federation是基于ModuleFedreationPlugin.js的，其最后是以webapck插件的形式接入webpack中，其内部主要设计ContainerPlugin用于解析Container的配置信息，ContainerReferencePlugin用于两个或多个不同Container的调用关系的判断，SharePlugin是共享机制的实现，通过ProviderModule和ConsumerModule进行模块的消费和提供")]),t._v(" "),n("h3",{attrs:{id:"module"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#module"}},[t._v("#")]),t._v(" Module")]),t._v(" "),n("p",[t._v("Webpack的module整合了不同的模块，抹平了不同的差异，模块联邦正是基于webpack的模块实现的依赖共享及传递")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("class Module extends DependenciesBlock {\n    constructor(type, context = null, layer = null) {\n        super();\n        // 模块的类型\n\t\tthis.type = type;\n        // 模块的上下文\n\t\tthis.context = context;\n        // 层数\n\t\tthis.layer = layer;\n\t\tthis.needId = true;\n        // 模块的id\n\t\tthis.debugId = debugId++;\n    }\n    // webpack6中将被移除\n    get id() {}\n    set id(value) {}\n    // 模块的hash，Module图中依赖关系的唯一判定\n    get hash() {}\n    get renderedHash() {}\n    // 获取文件\n    get profile() {}\n    set profile(value) {}\n    // 模块的入口顺序值 webpack模块加载的穿针引线机制\n    get index() {}\n    set index(value) {}\n    // 模块的出口信息值 webpack模块加载的穿针引线机制\n    get index2() {}\n    set index2(value) {}\n    // 图的深度\n    get depth() {}\n    set depth(value) {}\n    // chunk相关\n    addChunk(chunk) {}\n    removeChunk(chunk) {}\n    isInChunk(chunk) {}\n    getChunks() {}\n    getNumberOfChunks() {}\n    get chunksIterable() {}\n    // 序列化和反序列化上下文\n    serialize(context) {}\n    deserialize(context) {}\n}\n")])])]),n("h3",{attrs:{id:"containerplugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#containerplugin"}},[t._v("#")]),t._v(" ContainerPlugin")]),t._v(" "),n("p",[n("img",{attrs:{src:"/tech/front/federation20210119/federation02.png",alt:"图片"}})]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("class ContainerPlugin {\n\tconstructor(options) {}\n\n\tapply(compiler) {\n\t\tcompiler.hooks.make.tapAsync(PLUGIN_NAME, (compilation, callback) => {\n\t\t\tconst dep = new ContainerEntryDependency(name, exposes, shareScope);\n\t\t\tdep.loc = { name };\n\t\t\tcompilation.addEntry(\n\t\t\t\tcompilation.options.context,\n\t\t\t\tdep,\n\t\t\t\t{\n\t\t\t\t\tname,\n\t\t\t\t\tfilename,\n\t\t\t\t\tlibrary\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\tif (error) return callback(error);\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\tcompiler.hooks.thisCompilation.tap(\n\t\t\tPLUGIN_NAME,\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tContainerEntryDependency,\n\t\t\t\t\tnew ContainerEntryModuleFactory()\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tContainerExposedDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n}\n")])])]),n("p",[t._v("ContainerPlugin的核心是实现容器的模块的加载与导出，从而在模块外侧进行一层的包装为了对模块进行传递与依赖分析")]),t._v(" "),n("h3",{attrs:{id:"containerreferenceplugin"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#containerreferenceplugin"}},[t._v("#")]),t._v(" ContainerReferencePlugin")]),t._v(" "),n("p",[n("img",{attrs:{src:"/tech/front/federation20210119/federation03.png",alt:"图片"}})]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('class ContainerReferencePlugin {\n\tconstructor(options) {}\n\n\tapply(compiler) {\n\t\tconst { _remotes: remotes, _remoteType: remoteType } = this;\n\n\t\tconst remoteExternals = {};\n\n\t\tnew ExternalsPlugin(remoteType, remoteExternals).apply(compiler);\n\n\t\tcompiler.hooks.compilation.tap(\n\t\t\t"ContainerReferencePlugin",\n\t\t\t(compilation, { normalModuleFactory }) => {\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tRemoteToExternalDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tFallbackItemDependency,\n\t\t\t\t\tnormalModuleFactory\n\t\t\t\t);\n\n\t\t\t\tcompilation.dependencyFactories.set(\n\t\t\t\t\tFallbackDependency,\n\t\t\t\t\tnew FallbackModuleFactory()\n\t\t\t\t);\n\n\t\t\t\tnormalModuleFactory.hooks.factorize.tap(\n\t\t\t\t\t"ContainerReferencePlugin",\n\t\t\t\t\tdata => {\n\t\t\t\t\t\tif (!data.request.includes("!")) {\n\t\t\t\t\t\t\tfor (const [key, config] of remotes) {\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\tdata.request.startsWith(`${key}`) &&\n\t\t\t\t\t\t\t\t\t(data.request.length === key.length ||\n\t\t\t\t\t\t\t\t\t\tdata.request.charCodeAt(key.length) === slashCode)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\treturn new RemoteModule(\n\t\t\t\t\t\t\t\t\t\tdata.request,\n\t\t\t\t\t\t\t\t\t\tconfig.external.map((external, i) =>\n\t\t\t\t\t\t\t\t\t\t\texternal.startsWith("internal ")\n\t\t\t\t\t\t\t\t\t\t\t\t? external.slice(9)\n\t\t\t\t\t\t\t\t\t\t\t\t: `webpack/container/reference/${key}${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ti ? `/fallback-${i}` : ""\n\t\t\t\t\t\t\t\t\t\t\t\t  }`\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t`.${data.request.slice(key.length)}`,\n\t\t\t\t\t\t\t\t\t\tconfig.shareScope\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tcompilation.hooks.runtimeRequirementInTree\n\t\t\t\t\t.for(RuntimeGlobals.ensureChunkHandlers)\n\t\t\t\t\t.tap("ContainerReferencePlugin", (chunk, set) => {\n\t\t\t\t\t\tset.add(RuntimeGlobals.module);\n\t\t\t\t\t\tset.add(RuntimeGlobals.moduleFactoriesAddOnly);\n\t\t\t\t\t\tset.add(RuntimeGlobals.hasOwnProperty);\n\t\t\t\t\t\tset.add(RuntimeGlobals.initializeSharing);\n\t\t\t\t\t\tset.add(RuntimeGlobals.shareScopeMap);\n\t\t\t\t\t\tcompilation.addRuntimeModule(chunk, new RemoteRuntimeModule());\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n}\n')])])]),n("p",[t._v("ContainerReferencePlugin核心是为了实现模块的通信与传递，通过调用反馈的机制实现模块间的传递")]),t._v(" "),n("h3",{attrs:{id:"sharing"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sharing"}},[t._v("#")]),t._v(" sharing")]),t._v(" "),n("p",[n("img",{attrs:{src:"/tech/front/federation20210119/federation04.png",alt:"图片"}})]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('class SharePlugin {\n\tconstructor(options) {\n\t\tconst sharedOptions = parseOptions(\n\t\t\toptions.shared,\n\t\t\t(item, key) => {\n\t\t\t\tif (typeof item !== "string")\n\t\t\t\t\tthrow new Error("Unexpected array in shared");\n\t\t\t\t/** @type {SharedConfig} */\n\t\t\t\tconst config =\n\t\t\t\t\titem === key || !isRequiredVersion(item)\n\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\timport: item\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\timport: key,\n\t\t\t\t\t\t\t\trequiredVersion: item\n\t\t\t\t\t\t  };\n\t\t\t\treturn config;\n\t\t\t},\n\t\t\titem => item\n\t\t);\n\n\t\tconst consumes = sharedOptions.map(([key, options]) => ({\n\t\t\t[key]: {\n\t\t\t\timport: options.import,\n\t\t\t\tshareKey: options.shareKey || key,\n\t\t\t\tshareScope: options.shareScope,\n\t\t\t\trequiredVersion: options.requiredVersion,\n\t\t\t\tstrictVersion: options.strictVersion,\n\t\t\t\tsingleton: options.singleton,\n\t\t\t\tpackageName: options.packageName,\n\t\t\t\teager: options.eager\n\t\t\t}\n\t\t}));\n\n\t\tconst provides = sharedOptions\n\t\t\t.filter(([, options]) => options.import !== false)\n\t\t\t.map(([key, options]) => ({\n\t\t\t\t[options.import || key]: {\n\t\t\t\t\tshareKey: options.shareKey || key,\n\t\t\t\t\tshareScope: options.shareScope,\n\t\t\t\t\tversion: options.version,\n\t\t\t\t\teager: options.eager\n\t\t\t\t}\n\t\t\t}));\n\t\tthis._shareScope = options.shareScope;\n\t\tthis._consumes = consumes;\n\t\tthis._provides = provides;\n\t}\n\n\tapply(compiler) {\n\t\tnew ConsumeSharedPlugin({\n\t\t\tshareScope: this._shareScope,\n\t\t\tconsumes: this._consumes\n\t\t}).apply(compiler);\n\t\tnew ProvideSharedPlugin({\n\t\t\tshareScope: this._shareScope,\n\t\t\tprovides: this._provides\n\t\t}).apply(compiler);\n\t}\n}\n')])])]),n("p",[t._v("sharing的整个模块都在实现共享的功能，其利用Provider进行提供，Consumer进行消费的机制，将共享的数据隔离在特定的shareScope中，通过resolveMatchedConfigs实现了对provider依赖及consumer依赖的过滤，从而对共有依赖只进行一遍请求")]),t._v(" "),n("h2",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("p",[n("img",{attrs:{src:"/tech/front/federation20210119/federation05.png",alt:"图片"}})]),t._v(" "),n("p",[n("img",{attrs:{src:"/tech/front/federation20210119/federation06.png",alt:"图片"}})]),t._v(" "),n("p",[t._v("webpack5的模块联邦是在通过自定义Container容器来实现对每个不同module的处理，Container Reference作为host去调度容器，各个容器以异步方式exposed modules；对于共享部分，对于provider提供的请求内容，每个module都有一个对应的runtime机制，其在分析完模块之间的调用关系及依赖关系之后，才会调用consumer中的运行时进行加载，而且shared的代码无需自己手动打包。webapck5的模块联邦可以实现微前端应用的模块间的相互调用，并且其共享与隔离平衡也把控的较好，对于想研究模块联邦实现微前端的同学可以参考这篇文章"),n("a",{attrs:{href:"https://mp.weixin.qq.com/s/l0-uCLFRcBBrs4yTiAvryg",target:"_blank",rel:"noopener noreferrer"}},[t._v("【第2154期】EMP微前端解决方案"),n("OutboundLink")],1),t._v("，随着webpack5的推广及各大脚手架的跟进，相信webpack5的模块联邦方案会是未来微前端方案的主流。")]),t._v(" "),n("h2",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://github.com/webpack/webpack",target:"_blank",rel:"noopener noreferrer"}},[t._v("webpack官方仓库"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://blog.towavephone.com/module-federation-principle-research/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Module federation 原理研究"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://mp.weixin.qq.com/s/b5Gl_1yX1enktU9oulO9zg",target:"_blank",rel:"noopener noreferrer"}},[t._v("精读《Webpack5 新特性 - 模块联邦》"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://indepth.dev/posts/1173/webpack-5-module-federation-a-game-changer-in-javascript-architecture#its-important-to-note-these-are-special-entry-points-they-are-only-a-few-kb-in-size-containing-a-special-webpack-runtime-that-can-interface-with-the-host-it-is-not-a-standard-entry-point--7/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Webpack 5 Module Federation: A game-changer in JavaScript architecture"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=r.exports}}]);