(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{267:function(e,t,a){"use strict";a.r(t);var s=a(0),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"阿里飞冰-ice-框架下国际化实践"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#阿里飞冰-ice-框架下国际化实践"}},[e._v("#")]),e._v(" 阿里飞冰(ice)框架下国际化实践")]),e._v(" "),a("h2",{attrs:{id:"基本思路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本思路"}},[e._v("#")]),e._v(" 基本思路")]),e._v(" "),a("p",[e._v("阿里飞冰采用的是React基本框架，因而国际化方案采用yahoo的React-Intl包，其提供了IntlProvider的类，用于包裹组件。因而基本思路就是通过localStorage存储一个lang值，用于提供给IntlProvider的属性locale进行语言的识别，在locales模块目录下维护各个不同的语言配置即可，通过按钮的选择改变lang值，即可对全局环境进行语言切换。")]),e._v(" "),a("p",[a("img",{attrs:{src:"/tech/front/locales/locales01.png",alt:"图片"}})]),e._v(" "),a("h2",{attrs:{id:"目录结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录结构"}},[e._v("#")]),e._v(" 目录结构")]),e._v(" "),a("ul",[a("li",[e._v("语言配置文件: "),a("code",[e._v("src/locales")])]),e._v(" "),a("li",[e._v("设置lang工具函数: "),a("code",[e._v("src/utils/locale.js")])]),e._v(" "),a("li",[e._v("配置转换函数: "),a("code",[e._v("src/utils/localeConfig.js")])]),e._v(" "),a("li",[e._v("全局语言包裹组件: "),a("code",[e._v("src/components/LocaleProvider")])]),e._v(" "),a("li",[e._v("语言选择框组件: "),a("code",[e._v("src/components/LocaleSelect")])])]),e._v(" "),a("h2",{attrs:{id:"踩坑案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#踩坑案例"}},[e._v("#")]),e._v(" 踩坑案例")]),e._v(" "),a("h3",{attrs:{id:"飞冰ice的dialog组件导致的上下文丢失"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#飞冰ice的dialog组件导致的上下文丢失"}},[e._v("#")]),e._v(" 飞冰ice的Dialog组件导致的上下文丢失")]),e._v(" "),a("p",[e._v("[bug描述] 在PageHead中按钮点击，是通过jsx传输的包裹格式，在飞冰Dialog点击后会出现导致包裹在全局最外层的"),a("code",[e._v("<LocaleProvider></LocaleProvider>")]),e._v("丢失，错误为"),a("code",[e._v("Uncaught Error:[React Intl] Could not find required 'intl' object <IntlProvider> heads to exit in the component ancestry.")])]),e._v(" "),a("p",[e._v("[bug分析] jsx和js中的ast转换中造成场景性质的bug，原因在于项目书写过程中的js和jsx混合使用，对于前期未考虑到国际化场景")]),e._v(" "),a("p",[e._v("[解决方案] 在工具函数库localeConfig中实现confirmLocale函数，用于在js中的字符串转换")]),e._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[e._v("#")]),e._v(" 总结")]),e._v(" "),a("p",[e._v("相较于Vue的国际化Vue-i18n来说，React的国际化较为复杂，其依赖包也有很多，如'React i18n'、'Intl'等，本次国际化过程较为繁复，其本身难度倒不大，关键在于前期未考虑到要做国际化的需求，导致js和jsx混合使用，有的需要在config.js转换，而有的则需要在jsx中做转换，在某些场景中还会出现bug，因而后续过程中的项目如果考虑到国际化场景，需要提前留出预备量，任何的框架设计与实现需要做好度的把控，过渡设计和缺少设计都不能很好的达到业务效果，后期的反复工作就会增加，做好系统设计是每一个工程师都应该提升的能力。")])])}),[],!1,null,null,null);t.default=r.exports}}]);